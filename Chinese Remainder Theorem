#include<bits/stdc++.h>
#define ll long long int
using namespace std;
#define fio ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL)
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define endl "\n"
#define maxpq priority_queue<ll>
#define minpq priority_queue<ll, vector<ll>, greater<ll> >
#define vi vector<ll>
#define pii pair<ll, ll>
#define vii vector<pii>
#define for0(i, n) for (int i = 0; i < n; i++)
#define for1(i, n) for (int i = 1; i <= n; i++)
#define loop(i,a,b) for (int i = a; i < b; i++)
#define bloop(i,a,b) for (int i = a ; i>=b;i--)
ll MOD =1000000007;
#define INT_MAXI 9000000000000000000
#define INT_MINI -9000000000000000000

ll max(ll a, ll b) {if (a > b) return a; else return b;}
ll min(ll a, ll b) {if (a < b) return a; else return b;}

const int dx[4] = { -1, 1, 0, 0};
const int dy[4] = {0, 0, -1, 1};
int XX[] = { -1, -1, -1, 0, 0, 1, 1, 1 };
int YY[] = { -1, 0, 1, -1, 1, -1, 0, 1 };


// (3,2) ,(5,3) ,(2,1) here 2,3,5 are relative prime and x%3=2 , x%5=3, x%2=1 find x

ll pow_mod(ll n,ll m,ll f)
{
	if(m==0)
	return 1;
	if(m==1)
	return n;
	ll z=pow_mod(n,m/2,f);
	z%=f;
	z=z*z;
	z%=f;
	if(m%2==0)
	return z;
	return (n*z)%f;
}



ll crt(vector<pii>vec)
{
	
	ll m=1,n=vec.size();
	for(int i=0;i<n;i++)
	{
		m*=vec[i].fi;
	}

	ll ans=0;
	for(int i=0;i<n;i++)
	{
		ll t=1;
	
		for(int j=0;j<i;j++)
		{
			t*=vec[j].fi;
			t*=pow_mod(vec[j].fi,vec[i].fi-2,vec[i].fi);
			t%=m;
			
		}
		ans+=(t*(vec[i].se+m-ans))%m;
		ans%=m;

		
		
	}
	return ans;
	
	
	
	
}


int main()
{
	
	fio;
	
	ll t,i,j,x,l,r,n,m,k,y;
    vector<pii>vec;
    cin>>n;
    for(i=0;i<n;i++)
    {
    	cin>>x>>y;
    	vec.pb(mp(x,y));
	}
	cout<<crt(vec);
	
	
}
